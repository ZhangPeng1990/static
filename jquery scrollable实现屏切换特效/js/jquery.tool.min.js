/*
 * tools.scrollable 1.1.2 - Scroll your HTML with eye candy.
 * 
 * Copyright (c) 2009 Tero Piirainen
 * http://flowplayer.org/tools/scrollable.html
 *
 * Dual licensed under MIT and GPL 2+ licenses
 * http://www.opensource.org/licenses
 *
 * Launch  : March 2008
 * Date: ${date}
 * Revision: ${revision} 
 */(function(b) {
    function a(o, m) {
        function l(t) {
            var s = b(t);
            return m.globalNav ? s : o.parent().find(t);
        }
        var r = this, p = b(this), d = !m.vertical, e = o.children(), k = 0, i;
        c || (c = r), b.each(m, function(s, t) {
            b.isFunction(t) && p.bind(s, t);
        }), e.length > 1 && (e = b(m.items, o)), o.data("finder", l);
        var f = l(m.prev), h = l(m.next), g = l(m.prevPage), n = l(m.nextPage);
        b.extend(r, {
            "getIndex": function() {
                return k;
            },
            "getClickIndex": function() {
                var s = r.getItems();
                return s.index(s.filter("." + m.activeClass));
            },
            "getConf": function() {
                return m;
            },
            "getSize": function() {
                return r.getItems().size();
            },
            "getPageAmount": function() {
                return Math.ceil(this.getSize() / m.size);
            },
            "getPageIndex": function() {
                return Math.ceil(k / m.size);
            },
            "getNaviButtons": function() {
                return f.add(h).add(g).add(n);
            },
            "getRoot": function() {
                return o;
            },
            "getItemWrap": function() {
                return e;
            },
            "getItems": function() {
                return e.children(m.item);
            },
            "getVisibleItems": function() {
                return r.getItems().slice(k, k + m.size);
            },
            "seekTo": function(s, w, t) {
                function x() {
                    t && t.call(r, s), p.trigger("onSeek", [ s ]);
                }
                s < 0 && (s = 0);
                if (k === s) return r;
                b.isFunction(w) && (t = w);
                if (s > r.getSize() - m.size) return m.loop ? r.begin() : this.end();
                var u = r.getItems().eq(s);
                if (!u.length) return r;
                var v = b.Event("onBeforeSeek");
                p.trigger(v, [ s ]);
                if (v.isDefaultPrevented()) return r;
                if (w === undefined || b.isFunction(w)) w = m.speed;
                return d ? e.animate({
                    "left": -u.position().left
                }, w, m.easing, x) : e.animate({
                    "top": -u.position().top
                }, w, m.easing, x), c = r, k = s, v = b.Event("onStart"), p.trigger(v, [ s ]), v.isDefaultPrevented() ? r : (f.add(g).toggleClass(m.disabledClass, s === 0), h.add(n).toggleClass(m.disabledClass, s >= r.getSize() - m.size), r);
            },
            "move": function(u, t, s) {
                return i = u > 0, this.seekTo(k + u, t, s);
            },
            "next": function(t, s) {
                return this.move(1, t, s);
            },
            "prev": function(t, s) {
                return this.move(-1, t, s);
            },
            "movePage": function(w, v, u) {
                i = w > 0;
                var s = m.size * w, t = k % m.size;
                return t > 0 && (s += w > 0 ? -t : m.size - t), this.move(s, v, u);
            },
            "prevPage": function(t, s) {
                return this.movePage(-1, t, s);
            },
            "nextPage": function(t, s) {
                return this.movePage(1, t, s);
            },
            "setPage": function(t, u, s) {
                return this.seekTo(t * m.size, u, s);
            },
            "begin": function(t, s) {
                return i = !1, this.seekTo(0, t, s);
            },
            "end": function(t, s) {
                i = !0;
                var u = this.getSize() - m.size;
                return u > 0 ? this.seekTo(u, t, s) : r;
            },
            "reload": function() {
                return p.trigger("onReload"), r;
            },
            "focus": function() {
                return c = r, r;
            },
            "click": function(u) {
                var v = r.getItems().eq(u), s = m.activeClass, t = m.size;
                if (u < 0 || u >= r.getSize()) return r;
                if (t == 1) {
                    if (m.loop) return r.next();
                    if (u === 0 || u == r.getSize() - 1) i = i === undefined ? !0 : !i;
                    return i === !1 ? r.prev() : r.next();
                }
                if (t == 2) return u == k && u--, r.getItems().removeClass(s), v.addClass(s), r.seekTo(u, time, fn);
                if (!v.hasClass(s)) {
                    r.getItems().removeClass(s), v.addClass(s);
                    var x = Math.floor(t / 2), w = u - x;
                    w > r.getSize() - t && (w = r.getSize() - t);
                    if (w !== u) return r.seekTo(w);
                }
                return r;
            },
            "bind": function(s, t) {
                return p.bind(s, t), r;
            },
            "unbind": function(s) {
                return p.unbind(s), r;
            }
        }), b.each("onBeforeSeek,onStart,onSeek,onReload".split(","), function(s, t) {
            r[t] = function(u) {
                return r.bind(t, u);
            };
        }), f.addClass(m.disabledClass).click(function() {
            r.prev();
        }), h.click(function() {
            r.next();
        }), n.click(function() {
            r.nextPage();
        }), r.getSize() < m.size && h.add(n).addClass(m.disabledClass), g.addClass(m.disabledClass).click(function() {
            r.prevPage();
        });
        var j = m.hoverClass, q = "keydown." + Math.random().toString().substring(10);
        r.onReload(function() {
            j && r.getItems().hover(function() {
                b(this).addClass(j);
            }, function() {
                b(this).removeClass(j);
            }), m.clickable && r.getItems().each(function(s) {
                b(this).unbind("click.scrollable").bind("click.scrollable", function(t) {
                    if (b(t.target).is("a")) return;
                    return r.click(s);
                });
            }), m.keyboard ? b(document).unbind(q).bind(q, function(t) {
                if (t.altKey || t.ctrlKey) return;
                if (m.keyboard != "static" && c != r) return;
                var u = m.keyboardSteps;
                return !d || t.keyCode != 37 && t.keyCode != 39 ? !!d || t.keyCode != 38 && t.keyCode != 40 ? !0 : (r.move(t.keyCode == 38 ? -u : u), t.preventDefault()) : (r.move(t.keyCode == 37 ? -u : u), t.preventDefault());
            }) : b(document).unbind(q);
        }), r.reload();
    }
    b.tools = b.tools || {}, b.tools.scrollable = {
        "version": "1.1.2",
        "conf": {
            "size": 5,
            "vertical": !1,
            "speed": 400,
            "keyboard": !0,
            "keyboardSteps": null,
            "disabledClass": "disabled",
            "hoverClass": null,
            "clickable": !0,
            "activeClass": "active",
            "easing": "swing",
            "loop": !1,
            "items": ".items",
            "item": null,
            "prev": ".prev",
            "next": ".next",
            "prevPage": ".prevPage",
            "nextPage": ".nextPage",
            "api": !1
        }
    };
    var c;
    b.fn.scrollable = function(d) {
        var e = this.eq(typeof d == "number" ? d : 0).data("scrollable");
        if (e) return e;
        var f = b.extend({}, b.tools.scrollable.conf);
        return d = b.extend(f, d), d.keyboardSteps = d.keyboardSteps || d.size, this.each(function() {
            e = new a(b(this), d), b(this).data("scrollable", e);
        }), d.api ? e : this;
    };
})(jQuery), function(b) {
    var a = b.tools.scrollable;
    a.plugins = a.plugins || {}, a.plugins.navigator = {
        "version": "1.0.2",
        "conf": {
            "navi": ".navi",
            "naviItem": null,
            "activeClass": "active",
            "indexed": !1,
            "api": !1,
            "idPrefix": null
        }
    }, b.fn.navigator = function(d) {
        var e = b.extend({}, a.plugins.navigator.conf), c;
        return typeof d == "string" && (d = {
            "navi": d
        }), d = b.extend(e, d), this.each(function() {
            function j() {
                if (!l.children().length || l.data("navi") == i) {
                    l.empty(), l.data("navi", i);
                    for (var m = 0; m < i.getPageAmount(); m++) l.append(b("<" + (d.naviItem || "a") + "/>"));
                    g = l.children().each(function(n) {
                        var o = b(this);
                        o.click(function(p) {
                            return i.setPage(n), p.preventDefault();
                        }), d.indexed && o.text(n), d.idPrefix && o.attr("id", d.idPrefix + n);
                    });
                } else g = d.naviItem ? l.find(d.naviItem) : l.children(), g.each(function(n) {
                    var o = b(this);
                    o.click(function(p) {
                        return i.setPage(n), p.preventDefault();
                    });
                });
                g.eq(0).addClass(d.activeClass);
            }
            var i = b(this).scrollable(), f = i.getRoot(), l = f.data("finder").call(null, d.navi), g = null, k = i.getNaviButtons();
            i && (c = i), i.getNaviButtons = function() {
                return k.add(l);
            }, i.onStart(function(o, n) {
                var m = d.activeClass;
                g.removeClass(m).eq(i.getPageIndex()).addClass(m);
            }), i.onReload(function() {
                j();
            }), j();
            var h = g.filter("[href=" + location.hash + "]");
            h.length && i.move(g.index(h));
        }), d.api ? c : this;
    };
}(jQuery), function(b) {
    var a = b.tools.scrollable;
    a.plugins = a.plugins || {}, a.plugins.autoscroll = {
        "version": "1.0.1",
        "conf": {
            "autoplay": !0,
            "interval": 3e3,
            "autopause": !0,
            "steps": 1,
            "api": !1
        }
    }, b.fn.autoscroll = function(d) {
        typeof d == "number" && (d = {
            "interval": d
        });
        var e = b.extend({}, a.plugins.autoscroll.conf), c;
        return b.extend(e, d), this.each(function() {
            var g = b(this).scrollable();
            g && (c = g);
            var i, f, h = !0;
            g.play = function() {
                if (i) return;
                h = !1, i = setInterval(function() {
                    g.move(e.steps);
                }, e.interval), g.move(e.steps);
            }, g.pause = function() {
                i = clearInterval(i);
            }, g.stop = function() {
                g.pause(), h = !0;
            }, e.autopause && g.getRoot().add(g.getNaviButtons()).hover(function() {
                g.pause(), clearInterval(f);
            }, function() {
                h || (f = setTimeout(g.play, e.interval));
            }), e.autoplay && setTimeout(g.play, e.interval);
        }), e.api ? c : this;
    };
}(jQuery), function(c) {
    function p(d, a, b) {
        var e = this, l = d.add(this), h = d.find(b.tabs), j = a.jquery ? a : d.children(a), i;
        h.length || (h = d.children()), j.length || (j = d.parent().find(a)), j.length || (j = c(a)), c.extend(this, {
            "click": function(f, g) {
                var k = h.eq(f);
                typeof f == "string" && f.replace("#", "") && (k = h.filter("[href*=" + f.replace("#", "") + "]"), f = Math.max(h.index(k), 0));
                if (b.rotate) {
                    var n = h.length - 1;
                    if (f < 0) return e.click(n, g);
                    if (f > n) return e.click(0, g);
                }
                if (!k.length) {
                    if (i >= 0) return e;
                    f = b.initialIndex, k = h.eq(f);
                }
                if (f === i) return e;
                g = g || c.Event(), g.type = "onBeforeClick", l.trigger(g, [ f ]);
                if (!g.isDefaultPrevented()) return o[b.effect].call(e, f, function() {
                    g.type = "onClick", l.trigger(g, [ f ]);
                }), i = f, h.removeClass(b.current), k.addClass(b.current), e;
            },
            "getConf": function() {
                return b;
            },
            "getTabs": function() {
                return h;
            },
            "getPanes": function() {
                return j;
            },
            "getCurrentPane": function() {
                return j.eq(i);
            },
            "getCurrentTab": function() {
                return h.eq(i);
            },
            "getIndex": function() {
                return i;
            },
            "next": function() {
                return e.click(i + 1);
            },
            "prev": function() {
                return e.click(i - 1);
            }
        }), c.each("onBeforeClick,onClick".split(","), function(f, g) {
            c.isFunction(b[g]) && c(e).bind(g, b[g]), e[g] = function(k) {
                return c(e).bind(g, k), e;
            };
        }), b.history && c.fn.history && (c.tools.history.init(h), b.event = "history"), h.each(function(f) {
            c(this).bind(b.event, function(g) {
                return e.click(f, g), g.preventDefault();
            });
        }), j.find("a[href^=#]").click(function(f) {
            e.click(c(this).attr("href"), f);
        }), location.hash ? e.click(location.hash) : (b.initialIndex === 0 || b.initialIndex > 0) && e.click(b.initialIndex);
    }
    c.tools = c.tools || {
        "version": "1.2.2"
    }, c.tools.tabs = {
        "conf": {
            "tabs": "a",
            "current": "current",
            "onBeforeClick": null,
            "onClick": null,
            "effect": "default",
            "initialIndex": 0,
            "event": "click",
            "rotate": !1,
            "history": !1
        },
        "addEffect": function(d, a) {
            o[d] = a;
        }
    };
    var o = {
        "default": function(d, a) {
            this.getPanes().hide().eq(d).show(), a.call();
        },
        "fade": function(d, a) {
            var b = this.getConf(), e = b.fadeOutSpeed, l = this.getPanes();
            e ? l.fadeOut(e) : l.hide(), l.eq(d).fadeIn(b.fadeInSpeed, a);
        },
        "slide": function(d, a) {
            this.getPanes().slideUp(200), this.getPanes().eq(d).slideDown(400, a);
        },
        "ajax": function(d, a) {
            this.getPanes().eq(0).load(this.getTabs().eq(d).attr("href"), a);
        }
    }, m;
    c.tools.tabs.addEffect("horizontal", function(d, a) {
        m || (m = this.getPanes().eq(0).width()), this.getCurrentPane().animate({
            "width": 0
        }, function() {
            c(this).hide();
        }), this.getPanes().eq(d).animate({
            "width": m
        }, function() {
            c(this).show(), a.call();
        });
    }), c.fn.tabs = function(d, a) {
        var b = this.data("tabs");
        return b ? b : (c.isFunction(a) && (a = {
            "onBeforeClick": a
        }), a = c.extend({}, c.tools.tabs.conf, a), this.each(function() {
            b = new p(c(this), d, a), c(this).data("tabs", b);
        }), a.api ? b : this);
    };
}(jQuery);